subscription="Azure CXP FTA Internal Subscription THOVUY SETSPN"
admin_password=$(az keyvault secret show --id https://setspnvault.vault.azure.net/secrets/local-vm-password/efcdc715a1de4dca90806409730fb638 --query 'value' -o tsv)
admin_user=azadmin
rg=az-vwan-routing
loc="westeurope"

#select subscription
az account set --subscription "$subscription"

#Resource Group
az group create -n $rg -l $loc

# CSR site
az vm image accept-terms --urn cisco:cisco-csr-1000v:16_10-byol:16.10.120190108 --subscription "$subscription"


prefix=onprem1

vnetrange=10.50.0.0/16
serverrange=10.50.10.0/24
firewallrange=10.50.1.0/24
fwIP=10.50.1.5

#VNET
vnet=$prefix"-vnet"
az network vnet create --resource-group $rg --name $vnet --loc $loc --address-prefixes $vnetrange --subnet-name servers --subnet-prefix $serverrange
az network vnet subnet create --address-prefix $firewallrange --name csrnet --resource-group $rg --vnet-name $vnet

# CSR
az network public-ip create --name $prefix"-CSRpip" --resource-group $rg --idle-timeout 30 --allocation-method Static --loc $loc
az network nic create --name $prefix"CSRnic" -g $rg --subnet csrnet --vnet $vnet --ip-forwarding true --private-ip-address $fwIP --public-ip-address $prefix"-CSRpip"  --loc $loc
az vm create --resource-group $rg --loc $loc --name $prefix"-CSR" --size Standard_D2_v2 --nics $prefix"CSRnic" --image cisco:cisco-csr-1000v:16_10-byol:16.10.120190108 --admin-username $admin_user --admin-password $admin_password --no-wait

# test VM
az network public-ip create --name $prefix"VMpip" --resource-group $rg --loc $loc --allocation-method Dynamic
az network nic create --resource-group $rg -n $prefix"VMnic" --loc $loc --subnet servers --vnet-name $vnet --public-ip-address $prefix"VMpip"
az vm create -n $prefix"-VM" -g $rg --image UbuntuLTS --admin-username $admin_user --admin-password $admin_password --nics $prefix"VMnic" --size Standard_B1s --no-wait

#Route Table
rt="$vnet-servers-RT"
az network route-table create --name $rt --resource-group $rg --loc $loc
az network route-table route create -n DefaultRoute -g $rg --route-table-name $rt --address-prefix 10.0.0.0/8  --next-hop-type VirtualAppliance  --next-hop-ip-address $fwIP
az network vnet subnet update --name servers --vnet-name $vnet --resource-group $rg --route-table $rt


# Get VWAN IPs

# Download configuration to find out GWs public IP addresses
# Create storage account and SAS
storage_account=vpnconfigs$RANDOM 
container_name=configs
az storage account create -n $storage_account -g $rg -l $location1 --sku Standard_LRS
az storage container create -n $container_name --account-name $storage_account
end_time=`date -u -d "240 minutes" '+%Y-%m-%dT%H:%MZ'`
sas=$(az storage container generate-sas -n $container_name --account-name $storage_account --permissions dlrw --expiry $end_time -o tsv)
account_url=$(az storage account show -n $storage_account -g $rg --query primaryEndpoints.blob -o tsv)
# hub1:
blob_name=vpnconfig1.json
file_name="/tmp/${blob_name}"
storage_url=${account_url}${container_name}"/"${blob_name}"?"${sas}
az network vpn-site download --vwan-name $vwan1 -g $rg --vpn-sites hub2 --output-blob-sas-url $storage_url
az storage blob download --account-name $storage_account -c $container_name -n $blob_name --sas-token $sas -f $file_name
site=hub2
hub1_psk=$(cat $file_name | jq -r '.[] | select (.vpnSiteConfiguration.Name == "'$site'") | .vpnSiteConnections[].connectionConfiguration.PSK')
hub1_gw0_pip=$(cat $file_name | jq -r '.[] | select (.vpnSiteConfiguration.Name == "'$site'") | .vpnSiteConnections[].gatewayConfiguration.IpAddresses.Instance0')
hub1_gw1_pip=$(cat $file_name | jq -r '.[] | select (.vpnSiteConfiguration.Name == "'$site'") | .vpnSiteConnections[].gatewayConfiguration.IpAddresses.Instance1')
echo "Extracted info for $site: Gateway0 $hub1_gw0_pip. Gateway1 $hub1_gw1_pip. PSK $hub1_psk"


# configure CSR as needed
# local network

nva_pip=$(az network public-ip show -n $prefix"-CSRpip" -g $rg --query ipAddress -o tsv)

CSRNET=10.50.0.0
CSRMASK=255.255.0.0
CSRGW=10.50.1.1

BRANCHASN=65050

# hub 1
VWANHUB1PIP1=20.50.13.156
VWANHUB1PIP2=20.50.12.217
VWANHUB1BGPPEERIP1=10.101.10.13
VWANHUB1BGPPEERIP2=10.101.10.13
# hub 2
VWANHUB2PIP1=
VWANHUB2PIP2=
VWANHUB2BGPPEERIP1=
VWANHUB2BGPPEERIP2=

# 4 tunnels
read -r -d '' CONFIG << EOM
crypto ikev2 proposal azure-proposal
  encryption aes-cbc-256 aes-cbc-128 3des
  integrity sha1
  group 2
  exit
!
crypto ikev2 policy azure-policy
  proposal azure-proposal
  exit
!
crypto ikev2 keyring azure-keyring
  peer $VWANHUB1PIP1
    address $VWANHUB1PIP1
    pre-shared-key Microsoft123!
    exit
  peer $VWANHUB1PIP2
    address $VWANHUB1PIP2
    pre-shared-key Microsoft123!
    exit
  peer $VWANHUB2PIP1
    address $VWANHUB2PIP1
    pre-shared-key Microsoft123!
    exit
  peer $VWANHUB2PIP2
    address $VWANHUB2PIP2
    pre-shared-key Microsoft123!
    exit
  exit
!
crypto ikev2 profile azure-profile
  match address local interface GigabitEthernet1
  match identity remote address $VWANHUB1PIP1 255.255.255.255
  match identity remote address $VWANHUB1PIP2 255.255.255.255
  match identity remote address $VWANHUB2PIP1 255.255.255.255
  match identity remote address $VWANHUB2PIP2 255.255.255.255
  authentication remote pre-share
  authentication local pre-share
  keyring local azure-keyring
  exit
!
crypto ipsec transform-set azure-ipsec-proposal-set esp-aes 256 esp-sha-hmac
 mode tunnel
 exit

crypto ipsec profile azure-vti
  set transform-set azure-ipsec-proposal-set
  set ikev2-profile azure-profile
  set security-association lifetime kilobytes 102400000
  set security-association lifetime seconds 3600 
 exit
!
interface Tunnel0
 ip unnumbered GigabitEthernet1 
 ip tcp adjust-mss 1350
 tunnel source GigabitEthernet1
 tunnel mode ipsec ipv4
 tunnel destination $VWANHUB1PIP1
 tunnel protection ipsec profile azure-vti
exit
!
interface Tunnel1
 ip unnumbered GigabitEthernet1 
 ip tcp adjust-mss 1350
 tunnel source GigabitEthernet1
 tunnel mode ipsec ipv4
 tunnel destination $VWANHUB1PIP2
 tunnel protection ipsec profile azure-vti
exit

interface Tunnel2
 ip unnumbered GigabitEthernet1 
 ip tcp adjust-mss 1350
 tunnel source GigabitEthernet1
 tunnel mode ipsec ipv4
 tunnel destination $VWANHUB2PIP1
 tunnel protection ipsec profile azure-vti
exit

interface Tunnel3
 ip unnumbered GigabitEthernet1 
 ip tcp adjust-mss 1350
 tunnel source GigabitEthernet1
 tunnel mode ipsec ipv4
 tunnel destination $VWANHUB2PIP2
 tunnel protection ipsec profile azure-vti
exit
!
router bgp $BRANCHASN
 bgp router-id interface GigabitEthernet1
 bgp log-neighbor-changes
 network $CSRNET mask $CSRMASK
 neighbor $VWANHUB1BGPPEERIP2 remote-as 65515
 neighbor $VWANHUB1BGPPEERIP2 ebgp-multihop 5
 neighbor $VWANHUB1BGPPEERIP2 update-source GigabitEthernet1
 neighbor $VWANHUB1BGPPEERIP1 remote-as 65515
 neighbor $VWANHUB1BGPPEERIP1 ebgp-multihop 5
 neighbor $VWANHUB1BGPPEERIP1 update-source GigabitEthernet1
 neighbor $VWANHUB2BGPPEERIP1 remote-as 65515
 neighbor $VWANHUB2BGPPEERIP1 ebgp-multihop 5
 neighbor $VWANHUB2BGPPEERIP1 update-source GigabitEthernet1
 neighbor $VWANHUB2BGPPEERIP2 remote-as 65515
 neighbor $VWANHUB2BGPPEERIP2 ebgp-multihop 5
 neighbor $VWANHUB2BGPPEERIP2 update-source GigabitEthernet1
!
ip route $CSRNET $CSRMASK $CSRGW
ip route $VWANHUB1BGPPEERIP1 255.255.255.255 Tunnel0
ip route $VWANHUB1BGPPEERIP2 255.255.255.255 Tunnel1
ip route $VWANHUB2BGPPEERIP1 255.255.255.255 Tunnel2
ip route $VWANHUB2BGPPEERIP2 255.255.255.255 Tunnel3
!
end
!
EOM

# 2 tunnels
read -r -d '' CONFIG << EOM
crypto ikev2 proposal azure-proposal
  encryption aes-cbc-256 aes-cbc-128 3des
  integrity sha1
  group 2
  exit
!
crypto ikev2 policy azure-policy
  proposal azure-proposal
  exit
!
crypto ikev2 keyring azure-keyring
  peer $VWANHUB1PIP1
    address $VWANHUB1PIP1
    pre-shared-key Microsoft123!
    exit
  peer $VWANHUB1PIP2
    address $VWANHUB1PIP2
    pre-shared-key Microsoft123!
    exit
  exit
!
crypto ikev2 profile azure-profile
  match address local interface GigabitEthernet1
  match identity remote address $VWANHUB1PIP1 255.255.255.255
  match identity remote address $VWANHUB1PIP2 255.255.255.255
  authentication remote pre-share
  authentication local pre-share
  keyring local azure-keyring
  exit
!
crypto ipsec transform-set azure-ipsec-proposal-set esp-aes 256 esp-sha-hmac
 mode tunnel
 exit

crypto ipsec profile azure-vti
  set transform-set azure-ipsec-proposal-set
  set ikev2-profile azure-profile
  set security-association lifetime kilobytes 102400000
  set security-association lifetime seconds 3600 
 exit
!
interface Tunnel0
 ip unnumbered GigabitEthernet1 
 ip tcp adjust-mss 1350
 tunnel source GigabitEthernet1
 tunnel mode ipsec ipv4
 tunnel destination $VWANHUB1PIP1
 tunnel protection ipsec profile azure-vti
exit
!
interface Tunnel1
 ip unnumbered GigabitEthernet1 
 ip tcp adjust-mss 1350
 tunnel source GigabitEthernet1
 tunnel mode ipsec ipv4
 tunnel destination $VWANHUB1PIP2
 tunnel protection ipsec profile azure-vti
exit
!
router bgp $BRANCHASN
 bgp router-id interface GigabitEthernet1
 bgp log-neighbor-changes
 network $CSRNET mask $CSRMASK
 neighbor $VWANHUB1BGPPEERIP2 remote-as 65515
 neighbor $VWANHUB1BGPPEERIP2 ebgp-multihop 5
 neighbor $VWANHUB1BGPPEERIP2 update-source GigabitEthernet1
 neighbor $VWANHUB1BGPPEERIP1 remote-as 65515
 neighbor $VWANHUB1BGPPEERIP1 ebgp-multihop 5
 neighbor $VWANHUB1BGPPEERIP1 update-source GigabitEthernet1
!
ip route $CSRNET $CSRMASK $CSRGW
ip route $VWANHUB1BGPPEERIP1 255.255.255.255 Tunnel0
ip route $VWANHUB1BGPPEERIP2 255.255.255.255 Tunnel1
!
end
!
EOM

echo "$CONFIG"

ssh $nva_pip "copy bootflash:${CONFIG} running-config"
ssh $nva_pip "wr mem"