#kudos to Jose Moreno (github.com/erjosito) for some nice cli tricks
subscription="MSDN THOVUY P130"
az account set --subscription "$subscription"

admin_password=$(az keyvault secret show --id https://setspnvault.vault.azure.net/secrets/local-vm-password/efcdc715a1de4dca90806409730fb638 --query 'value' -o tsv)
admin_user=azadmin
rg=az-firewall-with-pl
vnet=azfw-vnet

azfwsubnet=AzureFirewallSubnet
fwName=azfw
logws_name=log$RANDOM

serversubnet=servers
serverRT=serversRT
serverVM=servervm
serverVM_PIP=servervm-pip

clientsubnet=clients
clientRT=clientsRT
clientVM=clientvm
clientVM_PIP=clientvm-pip

#Resource Group
az group create -n $rg -l westeurope

#WE VNET
az network vnet create -g $rg -n $vnet --address-prefix 10.1.0.0/16 --subnet-name $serversubnet --subnet-prefix 10.1.0.0/24 -l westeurope
az network vnet subnet create -g $rg -n $azfwsubnet --vnet-name $vnet --address-prefix 10.1.1.0/24
az network vnet subnet create -g $rg -n $clientsubnet --vnet-name $vnet --address-prefix 10.1.2.0/24

#Azure Firewall
#https://github.com/Azure/azure-cli-extensions/tree/master/src/azure-firewall
az extension add -n azure-firewall
az network firewall create --name $fwName --resource-group $rg -l westeurope
az network public-ip create -g $rg -n "$fwName-pip"  --allocation-method Static --sku Standard
az network firewall ip-config create -f $fwName -n ipconfig --public-ip-address "$fwName-pip" -g $rg --vnet-name $vnet

azfw_ip=$(az network public-ip show -g $rg -n "$fwName-pip" --query ipAddress -o tsv)
azfw_id=$(az network firewall show -n $fwName -g $rg -o tsv --query id)

az monitor log-analytics workspace create -n $logws_name -g $rg
logws_id=$(az resource list -g $rg -n $logws_name --query '[].id' -o tsv)
az monitor diagnostic-settings create -n mydiag --resource $azfw_id --workspace $logws_id \
    --metrics '[{"category": "AllMetrics", "enabled": true, "retentionPolicy": {"days": 0, "enabled": false }, "timeGrain": null}]' \
    --logs '[{"category": "AzureFirewallApplicationRule", "enabled": true, "retentionPolicy": {"days": 0, "enabled": false}}, 
            {"category": "AzureFirewallNetworkRule", "enabled": true, "retentionPolicy": {"days": 0, "enabled": false}}]' >/dev/null
az network firewall update -n $fwName -g $rg

azfw_private_ip=$(az network firewall show -n $fwName -g $rg -o tsv --query 'ipConfigurations[0].privateIpAddress')

az network firewall application-rule create \
   --collection-name App-Coll01 \
   --firewall-name $fwName \
   --name Deny-Google \
   --protocols Http=80 Https=443 \
   --resource-group $rg \
   --target-fqdns www.google.com \
   --source-addresses 10.0.2.0/24 \
   --priority 200 \
   --action Deny

az network firewall network-rule create \
   --collection-name PrivateTraffic \
   --destination-addresses 10.0.0.0/8 \
   --destination-ports '*' \
   --firewall-name $fwName \
   --name Allow-All \
   --protocols Any \
   --resource-group $rg \
   --priority 200 \
   --source-addresses 10.0.0.0/8 \
   --action Allow

#Server Route table
az network route-table create -g $rg -n $serverRT -l westeurope
#az network route-table route create -n toInternet -g $rg --route-table-name $serverRT --address-prefix 10.1.2.0/24  --next-hop-type VirtualAppliance  --next-hop-ip-address $azfw_private_ip
az network route-table route create -n toInternet -g $rg --route-table-name $serverRT --address-prefix 0.0.0.0/0  --next-hop-type VirtualAppliance  --next-hop-ip-address $azfw_private_ip
#avoid SSH being broken for "my" client
my_ip=$(curl -s4 ifconfig.co)
az network route-table route create -n clientIP --route-table-name $serverRT -g $rg --next-hop-type Internet --address-prefix "$my_ip/32"

az network vnet subnet update --vnet-name $vnet -n $serversubnet -g $rg  --route-table $serverRT

#Client Route table
az network route-table create -g $rg -n $clientRT -l westeurope
az network route-table route create -n toInternet -g $rg --route-table-name $clientRT --address-prefix 10.1.0.0/24  --next-hop-type VirtualAppliance  --next-hop-ip-address $azfw_private_ip
#avoid SSH being broken for "my" client
my_ip=$(curl -s4 ifconfig.co)
az network route-table route create -n clientIP --route-table-name $serverRT -g $rg --next-hop-type Internet --address-prefix "$my_ip/32"

az network vnet subnet update --vnet-name $vnet -n $clientsubnet -g $rg  --route-table $clientRT

#test VMs
az vm create --image ubuntults -g $rg -n $serverVM --admin-password $admin_password --admin-username $admin_user -l westeurope --public-ip-address $serverVM_PIP --vnet-name $vnet --subnet $serversubnet --os-disk-size 30 --storage-sku Standard_LRS --no-wait
az vm create --image ubuntults -g $rg -n $clientVM --admin-password $admin_password --admin-username $admin_user -l westeurope --public-ip-address $clientVM_PIP --vnet-name $vnet --subnet $clientsubnet --os-disk-size 30 --storage-sku Standard_LRS --no-wait


subnet=exception
az network vnet subnet create -g $rg -n $subnet --vnet-name $vnet --address-prefix 10.1.3.0/24
az vm create --image ubuntults -g $rg -n excvm --admin-password $admin_password --admin-username $admin_user -l westeurope --public-ip-address excvm-pip --vnet-name $vnet --subnet $subnet --os-disk-size 30 --storage-sku Standard_LRS --no-wait


